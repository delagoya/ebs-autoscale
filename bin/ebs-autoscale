#!/bin/sh
if [ "$#" -ne "2" ]; then
  echo "USAGE: $0 <VOLUME GROUP NAME> <LOGICAL VOLUME NAME>"
  exit 1
fi

logthis () {
  echo "[`date`] $1"
}

VG=$1
LV=$2
MP=$3
AZ=$(curl -s  http://169.254.169.254/latest/meta-data/placement/availability-zone/)
RG=$(echo ${AZ} | sed -e 's/[a-z]$//')
logthis "Region = $RG."
IN=$(curl -s  http://169.254.169.254/latest/meta-data/instance-id)
THRESHOLD=50
DRIVE_LETTERS=({a..z})

# make sure that this device is mounted.
umount /dev/${VG}/${LV}
mount /dev/${VG}/${LV}

calc_new_size() {
  local curr_size=$1
  local num_devices=$2
  local new_size=$curr_size

  if [ "$num_devices" -gt "4" ]; then
    new_size=512
    THRESHOLD=85
  elif [ "$num_devices" -gt "8" ]; then
    new_size=1024
    THRESHOLD=95
  elif [ "$num_devices" -gt "10" ]; then
    new_size=2048
    THRESHOLD=97
  else
    new_size=256
    THRESHOLD=80
  fi
  echo ${new_size}
}

add_space () {
  local num_devices=$(ls /dev/xvd* | grep -v -E '[0-9]$' | wc -l)
  if [ "${num_devices}" -ge "16" ]; then
    logthis "No more volumes can be safely added."
    return 0
  fi
  local curr_size=$(df  -BG /dev/${VG}/${LV} | grep ${VG} |awk '{print $2} ' | cut -d'G' -f1)
  if [ "${curr_size}" -lt "16384" ]; then
    local vol_size=$(calc_new_size $curr_size $num_devices)
    # Get the next device ID
    N=$(ls /dev/xvd* | grep -v -E '[0-9]$' | wc -l)

    DV="/dev/xvd${DRIVE_LETTERS[$N]}"
    logthis "Extending LV ${LV} by  ${vol_size} GB"

    # Create and attache the EBS Volume, also set it to delete on instance terminate
    V=$(aws ec2 create-volume --region ${RG} --availability-zone ${AZ} --volume-type gp2 --size ${vol_size} --encrypted --query "VolumeId" | sed 's/\"//g' )
    logthis "Created volume $V."

    # await volume to become available
    until [ "$(aws ec2 describe-volumes --volume-ids $V --region ${RG} --query "Volumes[0].State" | sed -e 's/\"//g')" == "available" ]; do
      logthis "Volume $V not yet available."
      sleep 1
    done

    aws ec2 attach-volume --region ${RG} --device ${DV} --volume-id $V --instance-id ${IN}

    # change the DeleteOnTermination volume attribute to true
    aws ec2 modify-instance-attribute --region ${RG} --block-device-mappings "DeviceName=${DV},Ebs={DeleteOnTermination=true,VolumeId=$V}" --instance-id ${IN}
    # Add the new device to the VG
    until [ -b "${DV}" ]; do
      logthis "Waiting for device $DV to become available"
      sleep 1
    done
    pvcreate ${DV}
    vgextend ${VG} ${DV}

    # get free extents in VG
    local free_extents=$(vgdisplay ${VG} |grep "Free" | awk '{print $5}')
    # extend the docker LV by the free extents
    lvextend --resizefs --extents +${free_extents} /dev/${VG}/${LV}
  fi
}


COUNT=0
while true; do
  F=$(df -h  /dev/${VG}/${LV} | grep -v Filesystem | awk '{print $5}' | cut -d"%" -f1 -)
  if  [ $F -ge "${THRESHOLD}" ]; then
    logthis "LOW DISK ($F): Adding more."
    add_space
  fi
  if [ "${COUNT}" -ge "100" ]; then 
    logthis "Free space $F."
    COUNT=0
  fi
  COUNT=$(expr $COUNT + 1 )
  sleep 5
done
